name: Build and Deploy to AWS Lambda

on:
  push:
    branches:
      - main
      - dev-test-aws

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names emotion-detection || \
          aws ecr create-repository --repository-name emotion-detection

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate Docker to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: eu-west-2
        run: |
          echo "Authenticating Docker to Amazon ECR..."
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and Push Docker Image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: eu-west-2
          IMAGE_REPO_NAME: emotion-detection
        run: |
          echo "Building and pushing the Docker image in Docker V2 format..."
          docker buildx build --platform linux/amd64 \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest . \
            --push
          echo "Docker image pushed to ECR successfully."

      - name: Check if Lambda Function Exists
        id: lambda-check
        continue-on-error: true
        run: |
          echo "Checking if the Lambda function exists..."
          aws lambda get-function --function-name emotion-detection

      - name: Create or Update Lambda Function
        run: |
          if [ "${{ steps.lambda-check.outcome }}" == "failure" ]; then
            echo "Creating AWS Lambda function..."
            aws lambda create-function \
              --function-name emotion-detection \
              --package-type Image \
              --code ImageUri=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/emotion-detection:latest \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/<YOUR_ROLE_NAME> \
              --memory-size 3008 \
              --timeout 30
          else
            echo "Updating AWS Lambda function..."
            aws lambda update-function-code \
              --function-name emotion-detection \
              --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/emotion-detection:latest
          fi
